// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar renders when incorrect badgePermission is set 1`] = `
<AvatarStyled
  alt="User avatar"
  badge="someIncorrectBadgePermission"
  size={48}
>
  <AvatarStyled__Wrapper
    size={48}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "ghGYWn",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size={48}
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 ghGYWn"
        size={48}
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="3px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="3px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="3px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
        <Badge
          badge="someIncorrectBadgePermission"
          className=""
          diameter={48}
          size={20.1872}
        >
          <StyledComponent
            badge="someIncorrectBadgePermission"
            className=""
            diameter={48}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Badge-x07uzi-0",
                  "isStatic": false,
                  "lastClassName": "ipqSDD",
                  "rules": Array [
                    "height:",
                    [Function],
                    ";left:",
                    [Function],
                    ";line-height:0;min-width:",
                    [Function],
                    ";position:absolute;top:",
                    [Function],
                    ";width:",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "Badge",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "className": [Function],
                  "diameter": [Function],
                  "size": [Function],
                },
                "render": [Function],
                "styledComponentId": "Badge-x07uzi-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size={20.1872}
          >
            <Badge
              badge="someIncorrectBadgePermission"
              className="Badge-x07uzi-0 ipqSDD"
              diameter={48}
              size={20.1872}
            />
          </StyledComponent>
        </Badge>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with badge 1`] = `
<AvatarStyled
  alt="User avatar"
  badge="admin"
  size={48}
>
  <AvatarStyled__Wrapper
    size={48}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "ghGYWn",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size={48}
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 ghGYWn"
        size={48}
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="3px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="3px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="3px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
        <Badge
          badge="admin"
          className=""
          diameter={48}
          size={20.1872}
        >
          <StyledComponent
            badge="admin"
            className=""
            diameter={48}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Badge-x07uzi-0",
                  "isStatic": false,
                  "lastClassName": "ipqSDD",
                  "rules": Array [
                    "height:",
                    [Function],
                    ";left:",
                    [Function],
                    ";line-height:0;min-width:",
                    [Function],
                    ";position:absolute;top:",
                    [Function],
                    ";width:",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "Badge",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "className": [Function],
                  "diameter": [Function],
                  "size": [Function],
                },
                "render": [Function],
                "styledComponentId": "Badge-x07uzi-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size={20.1872}
          >
            <Badge
              badge="admin"
              className="Badge-x07uzi-0 ipqSDD"
              diameter={48}
              size={20.1872}
            >
              <span
                className="wds-avatar__badge Badge-x07uzi-0 ipqSDD"
                title="Community Admin"
              >
                <_default>
                  <_default>
                    <div />
                  </_default>
                </_default>
              </span>
            </Badge>
          </StyledComponent>
        </Badge>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with default props 1`] = `
<AvatarStyled
  alt="User avatar"
  size={48}
>
  <AvatarStyled__Wrapper
    size={48}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "ghGYWn",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size={48}
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 ghGYWn"
        size={48}
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="3px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="3px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="3px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with link builder 1`] = `
<AvatarStyled
  alt="User avatar"
  linkBuilder={[Function]}
  size={48}
>
  <AvatarStyled__Wrapper
    size={48}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "ghGYWn",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size={48}
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 ghGYWn"
        size={48}
      >
        <div>
          <DefaultAvatar
            alt="User avatar"
            borderWidth="3px"
            className=""
            title="User avatar"
          >
            <StyledComponent
              alt="User avatar"
              borderWidth="3px"
              className=""
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "DefaultAvatar-sc-1o3mul6-0",
                    "isStatic": true,
                    "lastClassName": "cFsFqK",
                    "rules": Array [
                      "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                    ],
                  },
                  "defaultProps": Object {
                    "className": "",
                  },
                  "displayName": "DefaultAvatar",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                }
              }
              forwardedRef={null}
              title="User avatar"
            >
              <Component
                alt="User avatar"
                borderWidth="3px"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <_default
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  >
                    <div
                      alt="User avatar"
                      className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                      title="User avatar"
                    />
                  </_default>
                </_default>
              </Component>
            </StyledComponent>
          </DefaultAvatar>
        </div>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with props 1`] = `
<AvatarStyled
  alt="alt"
  badge="admin"
  className="class-name"
  href="href"
  size={48}
  src="src"
  title="title"
>
  <AvatarStyled__Wrapper
    href="href"
    size={48}
    title="title"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "fZLvkV",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      href="href"
      size={48}
      title="title"
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 fZLvkV"
        href="href"
        size={48}
        title="title"
      >
        <AvatarStyled__Link
          href="href"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "AvatarStyled__Link-sc-18cs6m1-0",
                  "isStatic": true,
                  "lastClassName": "hNhRip",
                  "rules": Array [
                    "color:#000;height:100%;width:100%;&:hover{color:#00acac;}",
                  ],
                },
                "displayName": "AvatarStyled__Link",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "AvatarStyled__Link-sc-18cs6m1-0",
                "target": "a",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            href="href"
          >
            <a
              className="AvatarStyled__Link-sc-18cs6m1-0 hNhRip"
              href="href"
            >
              <UserAvatar
                alt="alt"
                borderWidth="3px"
                className=""
                src="src"
                title="alt"
              >
                <StyledComponent
                  alt="alt"
                  borderWidth="3px"
                  className=""
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "UserAvatar-v8q1cq-0",
                        "isStatic": false,
                        "lastClassName": "bkFVgm",
                        "rules": Array [
                          "height:100%;width:100%;border-radius:50%;box-sizing:border-box;display:inline-block;border:",
                          [Function],
                          " solid #bed1cf;",
                        ],
                      },
                      "defaultProps": Object {
                        "className": "",
                      },
                      "displayName": "UserAvatar",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "alt": [Function],
                        "borderWidth": [Function],
                        "className": [Function],
                        "title": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "UserAvatar-v8q1cq-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    }
                  }
                  forwardedRef={null}
                  src="src"
                  title="alt"
                >
                  <Component
                    alt="alt"
                    borderWidth="3px"
                    className="UserAvatar-v8q1cq-0 bkFVgm"
                    src="src"
                    title="alt"
                  >
                    <img
                      alt="alt"
                      className="UserAvatar-v8q1cq-0 bkFVgm"
                      src="src"
                      title="alt"
                    />
                  </Component>
                </StyledComponent>
              </UserAvatar>
            </a>
          </StyledComponent>
        </AvatarStyled__Link>
        <Badge
          badge="admin"
          className=""
          diameter={48}
          size={20.1872}
        >
          <StyledComponent
            badge="admin"
            className=""
            diameter={48}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Badge-x07uzi-0",
                  "isStatic": false,
                  "lastClassName": "ipqSDD",
                  "rules": Array [
                    "height:",
                    [Function],
                    ";left:",
                    [Function],
                    ";line-height:0;min-width:",
                    [Function],
                    ";position:absolute;top:",
                    [Function],
                    ";width:",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "Badge",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "className": [Function],
                  "diameter": [Function],
                  "size": [Function],
                },
                "render": [Function],
                "styledComponentId": "Badge-x07uzi-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size={20.1872}
          >
            <Badge
              badge="admin"
              className="Badge-x07uzi-0 ipqSDD"
              diameter={48}
              size={20.1872}
            >
              <span
                className="wds-avatar__badge Badge-x07uzi-0 ipqSDD"
                title="Community Admin"
              >
                <_default>
                  <_default>
                    <div />
                  </_default>
                </_default>
              </span>
            </Badge>
          </StyledComponent>
        </Badge>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with size >= 48px 1`] = `
<AvatarStyled
  alt="User avatar"
  badge="admin"
  size="50"
>
  <AvatarStyled__Wrapper
    size="50"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "ePulSb",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="50"
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 ePulSb"
        size="50"
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="3px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="3px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="3px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
        <Badge
          badge="admin"
          className=""
          diameter={50}
          size={20.695}
        >
          <StyledComponent
            badge="admin"
            className=""
            diameter={50}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Badge-x07uzi-0",
                  "isStatic": false,
                  "lastClassName": "dFszKw",
                  "rules": Array [
                    "height:",
                    [Function],
                    ";left:",
                    [Function],
                    ";line-height:0;min-width:",
                    [Function],
                    ";position:absolute;top:",
                    [Function],
                    ";width:",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "Badge",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "className": [Function],
                  "diameter": [Function],
                  "size": [Function],
                },
                "render": [Function],
                "styledComponentId": "Badge-x07uzi-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size={20.695}
          >
            <Badge
              badge="admin"
              className="Badge-x07uzi-0 dFszKw"
              diameter={50}
              size={20.695}
            >
              <span
                className="wds-avatar__badge Badge-x07uzi-0 dFszKw"
                title="Community Admin"
              >
                <_default>
                  <_default>
                    <div />
                  </_default>
                </_default>
              </span>
            </Badge>
          </StyledComponent>
        </Badge>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with size >= 120px 1`] = `
<AvatarStyled
  alt="User avatar"
  size="124"
>
  <AvatarStyled__Wrapper
    size="124"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "kttgZX",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="124"
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 kttgZX"
        size="124"
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="4px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="4px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="4px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;

exports[`Avatar renders with size 30px 1`] = `
<AvatarStyled
  alt="User avatar"
  badge="admin"
  size="30"
>
  <AvatarStyled__Wrapper
    size="30"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
            "isStatic": false,
            "lastClassName": "htEqbA",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".DefaultAvatar-sc-1o3mul6-0",
              ":hover{fill:",
              [Function],
              ";}",
              ".AvatarStyled__Link-sc-18cs6m1-0",
              " ",
              ".UserAvatar-v8q1cq-0",
              ":hover{border-color:",
              [Function],
              ";}",
            ],
          },
          "displayName": "AvatarStyled__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "AvatarStyled__Wrapper-sc-18cs6m1-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      size="30"
    >
      <div
        className="AvatarStyled__Wrapper-sc-18cs6m1-1 htEqbA"
        size="30"
      >
        <DefaultAvatar
          alt="User avatar"
          borderWidth="2px"
          className=""
          title="User avatar"
        >
          <StyledComponent
            alt="User avatar"
            borderWidth="2px"
            className=""
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "DefaultAvatar-sc-1o3mul6-0",
                  "isStatic": true,
                  "lastClassName": "cFsFqK",
                  "rules": Array [
                    "background-color:#fff;border-radius:50%;border:0;box-sizing:border-box;display:inline-block;fill:#bed1cf;height:100%;width:100%;",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "DefaultAvatar",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "DefaultAvatar-sc-1o3mul6-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            title="User avatar"
          >
            <Component
              alt="User avatar"
              borderWidth="2px"
              className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
              title="User avatar"
            >
              <_default
                alt="User avatar"
                className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                title="User avatar"
              >
                <_default
                  alt="User avatar"
                  className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                  title="User avatar"
                >
                  <div
                    alt="User avatar"
                    className="DefaultAvatar-sc-1o3mul6-0 cFsFqK"
                    title="User avatar"
                  />
                </_default>
              </_default>
            </Component>
          </StyledComponent>
        </DefaultAvatar>
        <Badge
          badge="admin"
          className=""
          diameter={30}
          size={15.617}
        >
          <StyledComponent
            badge="admin"
            className=""
            diameter={30}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Badge-x07uzi-0",
                  "isStatic": false,
                  "lastClassName": "efLGfe",
                  "rules": Array [
                    "height:",
                    [Function],
                    ";left:",
                    [Function],
                    ";line-height:0;min-width:",
                    [Function],
                    ";position:absolute;top:",
                    [Function],
                    ";width:",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "className": "",
                },
                "displayName": "Badge",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "className": [Function],
                  "diameter": [Function],
                  "size": [Function],
                },
                "render": [Function],
                "styledComponentId": "Badge-x07uzi-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              }
            }
            forwardedRef={null}
            size={15.617}
          >
            <Badge
              badge="admin"
              className="Badge-x07uzi-0 efLGfe"
              diameter={30}
              size={15.617}
            >
              <span
                className="wds-avatar__badge Badge-x07uzi-0 efLGfe"
                title="Community Admin"
              >
                <_default>
                  <_default>
                    <div />
                  </_default>
                </_default>
              </span>
            </Badge>
          </StyledComponent>
        </Badge>
      </div>
    </StyledComponent>
  </AvatarStyled__Wrapper>
</AvatarStyled>
`;
