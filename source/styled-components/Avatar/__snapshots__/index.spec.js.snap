// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar renders when incorrect badgePermission is set 1`] = `
<Avatar
  alt="User avatar"
  badge="someIncorrectBadgePermission"
  size={30}
>
  <Avatar__Wrapper
    badgeSize={15.617}
    borderWidth="2px"
    className="user-avatar"
    diameter={30}
    hasLink={false}
  >
    <StyledComponent
      badgeSize={15.617}
      borderWidth="2px"
      className="user-avatar"
      diameter={30}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "dfUuRZ",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 dfUuRZ"
      >
        <_default
          className="user-avatar__image"
          title="User avatar"
        >
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <div
              className="user-avatar__image"
              title="User avatar"
            />
          </_default>
        </_default>
        <Badge
          badge="someIncorrectBadgePermission"
        />
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with badge 1`] = `
<Avatar
  alt="User avatar"
  badge="admin"
  size={30}
>
  <Avatar__Wrapper
    badgeSize={15.617}
    borderWidth="2px"
    className="user-avatar"
    diameter={30}
    hasLink={false}
  >
    <StyledComponent
      badgeSize={15.617}
      borderWidth="2px"
      className="user-avatar"
      diameter={30}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "dfUuRZ",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 dfUuRZ"
      >
        <_default
          className="user-avatar__image"
          title="User avatar"
        >
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <div
              className="user-avatar__image"
              title="User avatar"
            />
          </_default>
        </_default>
        <Badge
          badge="admin"
        >
          <span
            className="wds-avatar__badge"
            title="Community Admin"
          >
            <_default>
              <_default>
                <div />
              </_default>
            </_default>
          </span>
        </Badge>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with default props 1`] = `
<Avatar
  alt="User avatar"
  size={30}
>
  <Avatar__Wrapper
    badgeSize={15.617}
    borderWidth="2px"
    className="user-avatar"
    diameter={30}
    hasLink={false}
  >
    <StyledComponent
      badgeSize={15.617}
      borderWidth="2px"
      className="user-avatar"
      diameter={30}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "dfUuRZ",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 dfUuRZ"
      >
        <_default
          className="user-avatar__image"
          title="User avatar"
        >
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <div
              className="user-avatar__image"
              title="User avatar"
            />
          </_default>
        </_default>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with link builder 1`] = `
<Avatar
  alt="User avatar"
  linkBuilder={[Function]}
  size={30}
>
  <Avatar__Wrapper
    badgeSize={15.617}
    borderWidth="2px"
    className="user-avatar"
    diameter={30}
    hasLink={false}
  >
    <StyledComponent
      badgeSize={15.617}
      borderWidth="2px"
      className="user-avatar"
      diameter={30}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "dfUuRZ",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 dfUuRZ"
      >
        <div>
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <_default
              className="user-avatar__image"
              title="User avatar"
            >
              <div
                className="user-avatar__image"
                title="User avatar"
              />
            </_default>
          </_default>
        </div>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with props 1`] = `
<Avatar
  alt="alt"
  badge="admin"
  className="class-name"
  href="href"
  size={30}
  src="src"
  title="title"
>
  <Avatar__Wrapper
    badgeSize={15.617}
    borderWidth="2px"
    className="user-avatar class-name"
    diameter={30}
    hasLink={true}
    title="title"
  >
    <StyledComponent
      badgeSize={15.617}
      borderWidth="2px"
      className="user-avatar class-name"
      diameter={30}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "kDqtQO",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={true}
      title="title"
    >
      <div
        className="user-avatar class-name Avatar__Wrapper-sc-1jh7fda-0 kDqtQO"
        title="title"
      >
        <a
          href="href"
        >
          <img
            alt="alt"
            className="user-avatar__image"
            src="src"
            title="alt"
          />
        </a>
        <Badge
          badge="admin"
        >
          <span
            className="wds-avatar__badge"
            title="Community Admin"
          >
            <_default>
              <_default>
                <div />
              </_default>
            </_default>
          </span>
        </Badge>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with size >= 48px 1`] = `
<Avatar
  alt="User avatar"
  size="50"
>
  <Avatar__Wrapper
    badgeSize={20.695}
    borderWidth="3px"
    className="user-avatar"
    diameter="50"
    hasLink={false}
  >
    <StyledComponent
      badgeSize={20.695}
      borderWidth="3px"
      className="user-avatar"
      diameter="50"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "iJfHux",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 iJfHux"
      >
        <_default
          className="user-avatar__image"
          title="User avatar"
        >
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <div
              className="user-avatar__image"
              title="User avatar"
            />
          </_default>
        </_default>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;

exports[`Avatar renders with size >= 120px 1`] = `
<Avatar
  alt="User avatar"
  size="124"
>
  <Avatar__Wrapper
    badgeSize={39.4836}
    borderWidth="4px"
    className="user-avatar"
    diameter="124"
    hasLink={false}
  >
    <StyledComponent
      badgeSize={39.4836}
      borderWidth="4px"
      className="user-avatar"
      diameter="124"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Avatar__Wrapper-sc-1jh7fda-0",
            "isStatic": false,
            "lastClassName": "kxPXia",
            "rules": Array [
              "display:inline-block;height:",
              [Function],
              ";min-width:",
              [Function],
              ";position:relative;width:",
              [Function],
              ";a,img,svg{height:100%;width:100%;}.user-avatar__image{border-radius:50%;box-sizing:border-box;display:inline-block;}a{color:#000;&:hover{color:#00acac;}}}img.user-avatar__image{border:",
              [Function],
              " solid #ccc;&:hover{border-color:",
              [Function],
              ";}}svg.user-avatar__image{background-color:#fff;fill:#ccc;&:hover{fill:",
              [Function],
              ";}}.wds-avatar__badge{height:",
              [Function],
              ";left:",
              [Function],
              ";line-height:0;min-width:",
              [Function],
              ";position:absolute;top:",
              [Function],
              ";width:",
              [Function],
              ";}",
            ],
          },
          "displayName": "Avatar__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Avatar__Wrapper-sc-1jh7fda-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      hasLink={false}
    >
      <div
        className="user-avatar Avatar__Wrapper-sc-1jh7fda-0 kxPXia"
      >
        <_default
          className="user-avatar__image"
          title="User avatar"
        >
          <_default
            className="user-avatar__image"
            title="User avatar"
          >
            <div
              className="user-avatar__image"
              title="User avatar"
            />
          </_default>
        </_default>
      </div>
    </StyledComponent>
  </Avatar__Wrapper>
</Avatar>
`;
